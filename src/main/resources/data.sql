DROP TABLE IF EXISTS LIBRARY.PRODUCTS_AUTHORS;
DROP TABLE IF EXISTS LIBRARY.PRINTED_PRODUCTS;
DROP TABLE IF EXISTS LIBRARY.PUBLISHERS;
DROP TABLE IF EXISTS LIBRARY.AUTHORS;
--  ----------------------------------------------------
--   DDL FOR SCHEMA LIBRARY
--  ----------------------------------------------------
DROP SCHEMA IF EXISTS LIBRARY;
CREATE SCHEMA IF NOT EXISTS LIBRARY;
-- --------------------------------------------------------
--   DDL FOR TABLE LIBRARY.PUBLISHERS
-- --------------------------------------------------------
CREATE TABLE IF NOT EXISTS LIBRARY.PUBLISHERS
(
    ID   LONG         NOT NULL AUTO_INCREMENT,
    NAME VARCHAR(200) NOT NULL UNIQUE,
    PRIMARY KEY (ID)
);
CREATE UNIQUE INDEX IDX_PUBLISHERS_PUBLISHER_ID_UNIQUE ON LIBRARY.PUBLISHERS (ID ASC);
CREATE UNIQUE INDEX IDX_PUBLISHERS_NAME_UNIQUE ON LIBRARY.PUBLISHERS (NAME ASC);
-- --------------------------------------------------------
--   DDL FOR TABLE LIBRARY.AUTHORS
-- --------------------------------------------------------
CREATE TABLE IF NOT EXISTS LIBRARY.AUTHORS
(
    ID         LONG         NOT NULL AUTO_INCREMENT,
    FIRST_NAME VARCHAR(200) NOT NULL,
    LAST_NAME  VARCHAR(200) NOT NULL UNIQUE,
    PRIMARY KEY (ID)
);
CREATE UNIQUE INDEX IDX_AUTHORS_ID_UNIQUE ON LIBRARY.AUTHORS (ID ASC);
CREATE UNIQUE INDEX IDX_AUTHORS_LAST_NAME_UNIQUE ON LIBRARY.AUTHORS (LAST_NAME ASC);
--  --------------------------------------------------------
--  DDL FOR TABLE LIBRARY.PRINTED_PRODUCTS
--  --------------------------------------------------------
CREATE TABLE IF NOT EXISTS LIBRARY.PRINTED_PRODUCTS
(
    ID                 LONG         NOT NULL AUTO_INCREMENT,
    PRODUCT_TYPE       VARCHAR(100) NOT NULL,
    DATE_PUBLICATION   DATE         NOT NULL,
    TITLE              VARCHAR(200) NOT NULL UNIQUE,
    PUBLISHER_ID       LONG,
    EDITION            INT,
    PUBLICATION_NUMBER INT,
    PRIMARY KEY (ID),
    CONSTRAINT FK_PRINTED_PRODUCTS_PUBLISHER_ID_PUBLISHERS_ID
        FOREIGN KEY (PUBLISHER_ID) REFERENCES LIBRARY.PUBLISHERS (ID)
            ON DELETE SET NULL
            ON UPDATE CASCADE
);
CREATE UNIQUE INDEX IDX_PRINTED_PRODUCTS_ID_UNIQUE ON LIBRARY.PRINTED_PRODUCTS (ID ASC);
CREATE UNIQUE INDEX IDX_PRINTED_PRODUCTS_TITLE_UNIQUE ON LIBRARY.PRINTED_PRODUCTS (ID ASC);
-- --------------------------------------------------------
--   DDL FOR TABLE LIBRARY.PRODUCTS_AUTHORS
-- --------------------------------------------------------
CREATE TABLE IF NOT EXISTS LIBRARY.PRODUCTS_AUTHORS
(
    PRODUCT_ID INT NOT NULL,
    AUTHOR_ID  INT NOT NULL,
    PRIMARY KEY (PRODUCT_ID, AUTHOR_ID),
    CONSTRAINT FK_PRODUCTS_AUTHORS_PRODUCT_ID_PRINTED_PRODUCTS_ID
        FOREIGN KEY (PRODUCT_ID)
            REFERENCES LIBRARY.PRINTED_PRODUCTS (ID)
            ON DELETE CASCADE
            ON UPDATE CASCADE,
    CONSTRAINT FK_PRODUCTS_AUTHORS_AUTHOR_ID_AUTHORS_ID
        FOREIGN KEY (AUTHOR_ID)
            REFERENCES LIBRARY.AUTHORS (ID)
            ON DELETE CASCADE
            ON UPDATE CASCADE
);
-- ----------------------------------------------------
--  DML FOR TABLE LIBRARY.PUBLISHERS
-- ----------------------------------------------------
INSERT INTO LIBRARY.PUBLISHERS (NAME)
VALUES ('THE FIRST COMPANY');
INSERT INTO LIBRARY.PUBLISHERS (NAME)
VALUES ('THE SECOND COMPANY');
INSERT INTO LIBRARY.PUBLISHERS (NAME)
VALUES ('THE THIRD COMPANY');
-- ------------------------------------------------------
--  DML FOR TABLE LIBRARY.AUTHORS
-- ------------------------------------------------------
INSERT INTO LIBRARY.AUTHORS (FIRST_NAME, LAST_NAME)
VALUES ('IVAN', 'IVANOV');
INSERT INTO LIBRARY.AUTHORS (FIRST_NAME, LAST_NAME)
VALUES ('PETR', 'PETROV');
INSERT INTO LIBRARY.AUTHORS (FIRST_NAME, LAST_NAME)
VALUES ('ALEXANDER', 'ALEXANDROV');
-- ------------------------------------------------------
--  DML FOR TABLE LIBRARY.PRINTED_PRODUCTS
-- ------------------------------------------------------
INSERT INTO LIBRARY.PRINTED_PRODUCTS (PRODUCT_TYPE, DATE_PUBLICATION, TITLE, PUBLISHER_ID, EDITION)
VALUES ('BOOK', '1982-01-05', 'THE FIRST BOOK', 1, 2);
INSERT INTO LIBRARY.PRINTED_PRODUCTS (PRODUCT_TYPE, DATE_PUBLICATION, TITLE, PUBLISHER_ID, EDITION)
VALUES ('BOOK', '2000-05-30', 'THE SECOND BOOK', 2, 2);
INSERT INTO LIBRARY.PRINTED_PRODUCTS (PRODUCT_TYPE, DATE_PUBLICATION, TITLE, PUBLISHER_ID, EDITION)
VALUES ('BOOK', '2009-01-05', 'THE THIRD BOOK', 3, 2);
INSERT INTO LIBRARY.PRINTED_PRODUCTS (PRODUCT_TYPE, DATE_PUBLICATION, TITLE, PUBLISHER_ID, EDITION)
VALUES ('BOOK', '2009-01-05', 'THE FOURTH BOOK', 1, 1);
INSERT INTO LIBRARY.PRINTED_PRODUCTS (PRODUCT_TYPE, DATE_PUBLICATION, TITLE, PUBLISHER_ID, PUBLICATION_NUMBER)
VALUES ('JOURNAL', '1982-01-05', 'THE FIRST JOURNAL', 3, 1);
INSERT INTO LIBRARY.PRINTED_PRODUCTS (PRODUCT_TYPE, DATE_PUBLICATION, TITLE, PUBLISHER_ID, PUBLICATION_NUMBER)
VALUES ('JOURNAL', '1982-01-05', 'THE SECOND JOURNAL', 1, 1);
INSERT INTO LIBRARY.PRINTED_PRODUCTS (PRODUCT_TYPE, DATE_PUBLICATION, TITLE, PUBLISHER_ID, PUBLICATION_NUMBER)
VALUES ('JOURNAL', '2000-05-30', 'THE THIRD JOURNAL', 3, 3);
INSERT INTO LIBRARY.PRINTED_PRODUCTS (PRODUCT_TYPE, DATE_PUBLICATION, TITLE, PUBLISHER_ID, PUBLICATION_NUMBER)
VALUES ('JOURNAL', '2004-02-15', 'THE FOURTH JOURNAL', 2, 1);
INSERT INTO LIBRARY.PRINTED_PRODUCTS (PRODUCT_TYPE, DATE_PUBLICATION, TITLE, PUBLISHER_ID, PUBLICATION_NUMBER)
VALUES ('NEWSPAPER', '2015-03-17', 'THE FIRST NEWSPAPER', 3, 3);
INSERT INTO LIBRARY.PRINTED_PRODUCTS (PRODUCT_TYPE, DATE_PUBLICATION, TITLE, PUBLISHER_ID, PUBLICATION_NUMBER)
VALUES ('NEWSPAPER', '2020-04-25', 'THE SECOND NEWSPAPER', 1, 5);
INSERT INTO LIBRARY.PRINTED_PRODUCTS (PRODUCT_TYPE, DATE_PUBLICATION, TITLE, PUBLISHER_ID, PUBLICATION_NUMBER)
VALUES ('NEWSPAPER', '2022-09-17', 'THE THIRD NEWSPAPER', 3, 7);
INSERT INTO LIBRARY.PRINTED_PRODUCTS (PRODUCT_TYPE, DATE_PUBLICATION, TITLE, PUBLISHER_ID, PUBLICATION_NUMBER)
VALUES ('NEWSPAPER', '2015-03-17', 'THE FOURTH NEWSPAPER', 2, 1);
-- ------------------------------------------------------
--  DML FOR TABLE LIBRARY.PRODUCTS_AUTHORS
-- ------------------------------------------------------
INSERT INTO LIBRARY.PRODUCTS_AUTHORS (PRODUCT_ID, AUTHOR_ID)
VALUES (1, 1);
INSERT INTO LIBRARY.PRODUCTS_AUTHORS (PRODUCT_ID, AUTHOR_ID)
VALUES (1, 2);
INSERT INTO LIBRARY.PRODUCTS_AUTHORS (PRODUCT_ID, AUTHOR_ID)
VALUES (2, 2);
INSERT INTO LIBRARY.PRODUCTS_AUTHORS (PRODUCT_ID, AUTHOR_ID)
VALUES (3, 1);
INSERT INTO LIBRARY.PRODUCTS_AUTHORS (PRODUCT_ID, AUTHOR_ID)
VALUES (4, 2);
INSERT INTO LIBRARY.PRODUCTS_AUTHORS (PRODUCT_ID, AUTHOR_ID)
VALUES (5, 1);
INSERT INTO LIBRARY.PRODUCTS_AUTHORS (PRODUCT_ID, AUTHOR_ID)
VALUES (5, 3);
INSERT INTO LIBRARY.PRODUCTS_AUTHORS (PRODUCT_ID, AUTHOR_ID)
VALUES (6, 2);
INSERT INTO LIBRARY.PRODUCTS_AUTHORS (PRODUCT_ID, AUTHOR_ID)
VALUES (7, 3);
INSERT INTO LIBRARY.PRODUCTS_AUTHORS (PRODUCT_ID, AUTHOR_ID)
VALUES (8, 3);
INSERT INTO LIBRARY.PRODUCTS_AUTHORS (PRODUCT_ID, AUTHOR_ID)
VALUES (9, 3);
INSERT INTO LIBRARY.PRODUCTS_AUTHORS (PRODUCT_ID, AUTHOR_ID)
VALUES (10, 2);
INSERT INTO LIBRARY.PRODUCTS_AUTHORS (PRODUCT_ID, AUTHOR_ID)
VALUES (11, 1);
INSERT INTO LIBRARY.PRODUCTS_AUTHORS (PRODUCT_ID, AUTHOR_ID)
VALUES (11, 2);
INSERT INTO LIBRARY.PRODUCTS_AUTHORS (PRODUCT_ID, AUTHOR_ID)
VALUES (11, 3);
INSERT INTO LIBRARY.PRODUCTS_AUTHORS (PRODUCT_ID, AUTHOR_ID)
VALUES (12, 1);